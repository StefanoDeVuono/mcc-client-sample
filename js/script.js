// Generated by CoffeeScript 1.6.2
(function() {
  var ajaxFunc, checkBoxes, checkListeners, dOrder, dSorter, delay, droppedTrend, eOrder, eSorter, findAE, findF, findFajax, oldDropped, pause, resizeColumns, setDataA, setDataC, setDataD, setDataE, setDataF, storeA, storeAjaxFunc, storeC, storeD, storeE, storeF, visualizeC;

  console.log('new stuff');

  oldDropped = parseInt($('#arrows').text());

  droppedTrend = function() {
    var deltaDropped, newDropped;

    newDropped = $('#dropped_no span').text();
    deltaDropped = isNaN(oldDropped) ? 0 : newDropped - oldDropped;
    if (deltaDropped > 0) {
      $('#arrows').text("+" + deltaDropped);
      $('#arrows').removeClass();
      $('#arrows').addClass('goingUp');
    } else if (deltaDropped < 0) {
      $('#arrows').text(deltaDropped);
      $('#arrows').removeClass();
      $('#arrows').addClass('goingDown');
    } else {
      $('#arrows').text(deltaDropped);
      $('#arrows').removeClass();
      $('#arrows').addClass('neutral');
    }
    return oldDropped = newDropped;
  };

  dSorter = 'campaign';

  dOrder = "asc";

  $('#callsWaitingTable th').on('click', function() {
    dSorter = $(this).attr('id');
    if ($(this).hasClass('headerSortDown')) {
      dOrder = "desc";
    } else if ($(this).hasClass('headerSortUp')) {
      dOrder = "asc";
    }
    return false;
  });

  eSorter = 'user';

  eOrder = "asc";

  $('#activeResourcesTable th').on('click', function() {
    eSorter = $(this).attr('id');
    if ($(this).hasClass('headerSortDown')) {
      eOrder = "desc";
    } else if ($(this).hasClass('headerSortUp')) {
      eOrder = "asc";
    }
    return false;
  });

  setDataA = function(data) {
    $('#agent_ready .number').text(data['A']['READY']);
    $('#agent_total .number').text(data['A']['TOTAL']);
    $('#agent_incall .number').text(data['A']['INCALL']);
    $('#out_total .number').text(data['A']['ACTIVE']);
    $('#agent_dead .number').text(data['A']['DEAD']);
    $('#agent_paused .number').text(data['A']['PAUSED']);
    $('#out_ring .number').text(data['A']['RINGING']);
    $('#out_live .number').text(data['A']['WAITING']);
    $('#agent_dispo .number').text(data['A']['DISPO']);
    return false;
  };

  visualizeC = function(div, dataset) {
    var el;

    el = d3.select(div + " svg");
    el.attr("width", 169).attr("height", 120).selectAll("rect").data(dataset).enter().append("rect").attr("x", 25).attr("y", function(d) {
      return 120 - d;
    }).attr("width", 119).attr("height", function(d) {
      return d;
    }).attr("fill", "#6496B9");
    return el.selectAll("text").data(dataset).enter().append("text").text(function(d) {
      return d + "%";
    }).attr("x", 85).attr("y", function(d) {
      if (d >= 5) {
        return 120 - d + 14;
      } else {
        return 120 - d - 5;
      }
    }).attr("font-family", "sans-serif").attr("font-size", "11px").attr("fill", function(d) {
      if (d >= 5) {
        return "white";
      } else {
        return "black";
      }
    }).attr("text-anchor", "middle");
  };

  setDataC = function(data) {
    var ansPct, busPct, canPct, conPct, dataset;

    ansPct = data['C']['ANSWER'] || 0;
    busPct = data['C']['BUSY'] || 0;
    canPct = data['C']['CANCEL'] || 0;
    conPct = data['C']['CONGESTION'] || 0;
    dataset = [ansPct, busPct, canPct, conPct];
    $('#answer .number, #busy .number, #cancel .number, #congestion .number').empty();
    visualizeC('#answer', [ansPct]);
    visualizeC('#busy', [busPct]);
    visualizeC('#cancel', [canPct]);
    visualizeC('#congestion', [conPct]);
    return false;
  };

  resizeColumns = function(tableId, tableWidth) {
    var length, margin;

    length = $(tableId + ' th:visible').length;
    $(tableId + ' th, ' + tableId + ' td').css('width', (tableWidth / length) + 'px');
    margin = (((tableWidth / length) - 77) / 2) + 10;
    $(tableId + ' .reportlink').css('margin-left', margin + 'px');
    $(tableId + ' td.col15').css('width', '55px');
    $(tableId + ' th').removeClass('firstButton lastButton');
    $(tableId + ' th:visible:first').addClass('firstButton');
    $(tableId + ' th:visible:last').addClass('lastButton');
    return false;
  };

  setDataD = function(data) {
    var element, row, _i, _len, _ref;

    row = "";
    _ref = data['D'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      element = _ref[_i];
      row += '<tr>';
      if ($('#callsWaitingTable th.col1').is(':hidden')) {
        row += '<td class="col1" style="display: none">' + element['campaign'] + '</td>';
      } else {
        row += '<td class="col1">' + element['campaign'] + '</td>';
      }
      if ($('#callsWaitingTable th.col2').is(':hidden')) {
        row += '<td class="col2" style="display: none">' + element['phone'] + '</td>';
      } else {
        row += '<td class="col2">' + element['phone'] + '</td>';
      }
      if ($('#callsWaitingTable th.col3').is(':hidden')) {
        row += '<td class="col3" style="display: none">' + element['time'] + '</td>';
      } else {
        row += '<td class="col3">' + element['time'] + '</td>';
      }
      if ($('#callsWaitingTable th.col4').is(':hidden')) {
        row += '<td class="col4" style="display: none">' + element['callType'] + '</td>';
      } else {
        row += '<td class="col4">' + element['callType'] + '</td>';
      }
      if ($('#callsWaitingTable th.col5').is(':hidden')) {
        row += '<td class="col5" style="display: none">' + element['priority'] + '</td>';
      } else {
        row += '<td class="col5">' + element['priority'] + '</td>';
      }
      row += '</tr>';
    }
    $('#callsWaitingTable tbody.rows').empty();
    $('#callsWaitingTable tbody.rows').html(row);
    resizeColumns('#callsWaitingTable', 910);
    return false;
  };

  setDataE = function(data) {
    var element, row, _i, _len, _ref;

    row = "";
    _ref = data['E'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      element = _ref[_i];
      row += '<tr>';
      if ($('#activeResourcesTable th.col1').is(':hidden')) {
        row += '<td class="col col1">' + element['user'] + '<span class="thingamajig" data-user="' + element['user'] + '" data-campaign="' + element['campaign'] + '" data-in-group=' + element['in-group'] + '>' + '<a href="/Reports/tabs.php?userid=' + element['user'] + '" target="_blank" class="reportlink"></a>' + '<a href="#" class="grouplink"></a>' + '<a href="/vicidial/user_status.php?user=' + element['userid'] + '" class="permissionlink"></a>' + '</span></td>';
      } else {
        row += '<td class="col col1">' + element['user'] + '<span class="thingamajig" data-user="' + element['user'] + '" data-campaign="' + element['campaign'] + '" data-in-group=' + element['in-group'] + '>' + '<a href="/Reports/tabs.php?userid=' + element['user'] + '" target="_blank" class="reportlink"></a>' + '<a href="#" class="grouplink"></a>' + '<a href="/vicidial/user_status.php?user=' + element['userid'] + '" class="permissionlink"></a>' + '</span></td>';
      }
      if ($('#activeResourcesTable th.col2').is(':hidden')) {
        row += '<td class="col col2" style="display: none">' + element['status'] + '</td>';
      } else {
        row += '<td class="col col2">' + element['status'] + '</td>';
      }
      if ($('#activeResourcesTable th.col3').is(':hidden')) {
        row += '<td class="col col3" style="display: none">' + element['time'] + '</td>';
      } else {
        row += '<td class="col col3">' + element['time'] + '</td>';
      }
      if ($('#activeResourcesTable th.col4').is(':hidden')) {
        row += '<td class="col col4" style="display: none">' + element['campaign'] + '</td>';
      } else {
        row += '<td class="col col4">' + element['campaign'] + '</td>';
      }
      if ($('#activeResourcesTable th.col5').is(':hidden')) {
        row += '<td class="col col5" style="display: none">' + element['group'] + '</td>';
      } else {
        row += '<td class="col col5">' + element['group'] + '</td>';
      }
      if ($('#activeResourcesTable th.col6').is(':hidden')) {
        row += '<td class="col col6" style="display: none">' + element['calls'] + '</td>';
      } else {
        row += '<td class="col col6">' + element['calls'] + '</td>';
      }
      if ($('#activeResourcesTable th.col7').is(':hidden')) {
        row += '<td class="col col7" style="display: none">' + element['contacts'] + '</td>';
      } else {
        row += '<td class="col col7">' + element['contacts'] + '</td>';
      }
      if ($('#activeResourcesTable th.col8').is(':hidden')) {
        row += '<td class="col col8" style="display: none">' + element['transfers'] + '</td>';
      } else {
        row += '<td class="col col8">' + element['transfers'] + '</td>';
      }
      if ($('#activeResourcesTable th.col9').is(':hidden')) {
        row += '<td class="col col9" style="display: none">' + element['successes'] + '</td>';
      } else {
        row += '<td class="col col9">' + element['successes'] + '</td>';
      }
      if ($('#activeResourcesTable th.col10').is(':hidden')) {
        row += '<td class="col col10" style="display: none">' + element['extension'] + '</td>';
      } else {
        row += '<td class="col col10">' + element['extension'] + '</td>';
      }
      if ($('#activeResourcesTable th.col11').is(':hidden')) {
        row += '<td class="col col11" style="display: none">' + element['station'] + '</td>';
      } else {
        row += '<td class="col col11">' + element['station'] + '</td>';
      }
      if ($('#activeResourcesTable th.col12').is(':hidden')) {
        row += '<td class="col col12" style="display: none">' + element['type'] + '</td>';
      } else {
        row += '<td class="col col12">' + element['type'] + '</td>';
      }
      if ($('#activeResourcesTable th.col13').is(':hidden')) {
        row += '<td class="col col13" style="display: none">' + element['in-group'].join(', ') + '</td>';
      } else {
        row += '<td class="col col13">' + element['in-group'].join(', ') + '</td>';
      }
      if ($('#activeResourcesTable th.col14').is(':hidden')) {
        row += '<td class="col col14" style="display: none">' + element['calls'] + '</td>';
      } else {
        row += '<td class="col col14">' + element['calls'] + '</td>';
      }
      row += '<td class="col col15" data-session-id="' + element['session-id'] + '" data-station="' + element['extension'] + '"><a class="listen" href="#"></a><a class="speak" href="#"></a><a class="shout" href="#"></a></td>';
      row += '</tr>';
    }
    $('#activeResourcesTable tbody.rows').empty();
    $('#activeResourcesTable tbody.rows').html(row);
    $("#activeResourcesTable").trigger("update");
    $("#activeResourcesTable").trigger("applyWidgets");
    resizeColumns('#activeResourcesTable', 910);
    return false;
  };

  delay = 5;

  if (delay > 0) {
    ajaxFunc = function() {
      return $.ajax({
        url: "./find.php",
        data: {
          dSort: dSorter,
          dOrder: dOrder,
          eSort: eSorter,
          eOrder: eOrder
        },
        success: function(data) {
          setDataA(data);
          setDataC(data);
          setDataD(data);
          setDataE(data);
          $("#callsWaitingTable").trigger("update");
          $("#activeResourcesTable").trigger("update");
          return findAE(delay);
        },
        dataType: "json"
      });
    };
    ajaxFunc();
    findAE = function(delay) {
      setTimeout(ajaxFunc, delay * 1000);
      return false;
    };
  } else if (delay === 0) {
    findAE = function() {
      $.ajax({
        url: "./find.php",
        data: {
          dSort: dSorter,
          dOrder: dOrder,
          eSort: eSorter,
          eOrder: eOrder
        },
        success: function(data) {
          setDataA(data);
          setDataC(data);
          setDataD(data);
          setDataE(data);
          $("#callsWaitingTable").trigger("update");
          $("#activeResourcesTable").trigger("update");
          return false;
        },
        dataType: "json",
        complete: find,
        timeout: 30000
      });
      return false;
    };
  }

  setDataF = function(data) {
    $('#dropped_no span').text(data['DROPPED']);
    $('#answered span').text(data['ANSWERED']);
    $('#dropped h2 span.pct_no').text(data['DROPPED_PCT']);
    $('#agentAvgWait h3').text(data['AGENT_AVG_WAIT']);
    $('#avgTalkTime h3').text(data['AVG_TALK_TIME']);
    $('#callsToday h3').text(data['TOTAL_CALLS_TODAY']);
    $('#avgWrap h3').text(data['AVG_WRAP']);
    $('#avgPause h3').text(data['AVG_PAUSE']);
    $('#avgAgents h3').text(data['AVG_AGENTS']);
    $('#dialableLeads h3').text(data['DIALABLE_LEADS']);
    $('#dialMethod h3').text(data['DIAL_METHOD']);
    return false;
  };

  findF = function() {
    return setTimeout(findFajax, 60000);
  };

  findFajax = function() {
    return $.ajax({
      url: "./findF.php",
      success: function(data) {
        setDataF(data);
        droppedTrend();
        return findF();
      },
      dataType: "json"
    });
  };

  findFajax();

  pause = function() {
    return false;
  };

  storeA = setDataA;

  storeC = setDataC;

  storeD = setDataD;

  storeE = setDataE;

  storeF = setDataF;

  storeAjaxFunc = ajaxFunc;

  $('#sectionA header').on('click', 'a.pause', function(e) {
    e.preventDefault();
    setDataA = pause;
    setDataC = pause;
    setDataD = pause;
    setDataE = pause;
    setDataF = pause;
    ajaxFunc = pause;
    $(this).removeClass('pause');
    $(this).addClass('play');
    return false;
  });

  $('#sectionA header').on('click', 'a.play', function(e) {
    e.preventDefault();
    setDataA = storeA;
    setDataC = storeC;
    setDataD = storeD;
    setDataE = storeE;
    setDataF = storeF;
    ajaxFunc = storeAjaxFunc;
    ajaxFunc();
    $(this).removeClass('play');
    $(this).addClass('pause');
    return false;
  });

  $('#sectionD .pause').on('click', 'div.minipause', function(e) {
    e.preventDefault();
    storeD = setDataD;
    setDataD = pause;
    $(this).removeClass('minipause');
    $(this).addClass('miniplay');
    $('#sectionD .pause .pauselabel').text('Play');
    return false;
  });

  $('#sectionD .pause').on('click', 'div.miniplay', function(e) {
    e.preventDefault();
    setDataD = storeD;
    ajaxFunc();
    $(this).removeClass('miniplay');
    $(this).addClass('minipause');
    $('#sectionD .pause .pauselabel').text('Pause');
    return false;
  });

  $('section').on('click', 'a.close', function(e) {
    var button, parent, timer;

    e.preventDefault();
    parent = '#' + $(this).parent().attr('id');
    if ($(parent).is('section') || $(parent).is('div')) {
      $(parent).addClass('closed');
      button = $(this);
      timer = 400;
      $(parent + ' .closable').slideUp(timer, function() {
        button.removeClass('close');
        return button.addClass('open');
      });
    }
    if ($(parent).is('section')) {
      $(parent + ' header').animate({
        'margin': '8px auto 8px 28px'
      }, timer);
    } else if ($(parent).is('div')) {
      $(parent + ' header').animate({
        'margin': '8px 0 6px 0'
      }, timer);
    }
    return false;
  });

  $('section').on('click', 'a.open', function(e) {
    var button, parent, timer;

    e.preventDefault();
    parent = '#' + $(this).parent().attr('id');
    if ($(parent).is('section') || $(parent).is('div')) {
      $(parent).removeClass('closed');
      button = $(this);
      timer = 400;
      $(parent + ' .closable').slideDown(timer, function() {
        button.removeClass('open');
        return button.addClass('close');
      });
    }
    if ($(parent).is('section')) {
      $(parent + ' header').animate({
        'margin': '20px auto 8px 28px'
      }, timer);
    } else if ($(parent).is('div')) {
      $(parent + ' header').animate({
        'margin': '22px 0 6px 0'
      }, timer);
    }
    return false;
  });

  checkBoxes = function(tableId) {
    var element, grandparentId, id, length, visibleButtons, _i, _len;

    visibleButtons = $(tableId + ' th:visible');
    length = visibleButtons.length;
    grandparentId = '#' + $(tableId).parent().parent().attr('id');
    $(grandparentId + ' .options input').prop('checked', false);
    for (_i = 0, _len = visibleButtons.length; _i < _len; _i++) {
      element = visibleButtons[_i];
      id = $(element).attr('id');
      $(grandparentId + ' .options input.' + id).prop('checked', true);
    }
    if ($(grandparentId + ' input:checked').length >= 9) {
      $(grandparentId + ' input:not(:checked)').attr('disabled', true);
    } else {
      $(grandparentId + ' input').attr('disabled', false);
    }
    return false;
  };

  checkListeners = function(sectionId, tableId) {
    $(sectionId + ' div.thing').on('click', 'input:checked', function() {
      var checkClass, colClass;

      checkClass = $(this).attr('class');
      colClass = $(tableId + ' #' + checkClass).attr('class').split(' ')[0];
      $(tableId + ' .' + colClass).show();
      resizeColumns(tableId, 910);
      checkBoxes(tableId);
      return $(this).prop('checked', true);
    });
    return $(sectionId + ' div.thing').on('click', 'input:not(:checked)', function() {
      var checkClass;

      checkClass = $(this).attr('class');
      return $(tableId + ' th#' + checkClass + ' a').click();
    });
  };

  $('#callsWaitingTable th').on('click', 'a.close', function(e) {
    var classes;

    e.preventDefault();
    e.stopPropagation();
    classes = $(e.target.parentNode).attr('class').split(' ')[0];
    if ($('#callsWaitingTable th:visible').length > 1) {
      $('#callsWaitingTable .' + classes).hide();
    }
    checkBoxes('#callsWaitingTable');
    resizeColumns('#callsWaitingTable', 910);
    return false;
  });

  checkListeners('#sectionD', '#callsWaitingTable');

  $('#activeResourcesTable th').on('click', 'a.close', function(e) {
    var classes;

    e.preventDefault();
    e.stopPropagation();
    classes = $(e.target.parentNode).attr('class').split(' ')[0];
    if ($('#activeResourcesTable th:visible').length > 1) {
      $('#activeResourcesTable .' + classes).hide();
    }
    checkBoxes('#activeResourcesTable');
    return resizeColumns('#activeResourcesTable', 910);
  });

  checkListeners('#sectionE', '#activeResourcesTable');

  $("#activeResourcesTable").tablesorter({
    widgets: ['zebra']
  });

  $("#callsWaitingTable").tablesorter();

  checkBoxes('#callsWaitingTable');

  checkBoxes('#activeResourcesTable');

  $('#settingsPopup').on('click', 'input[type="submit"]', function(e) {
    var val;

    val = $('#refreshrate').val();
    if (val === 'Pause') {
      $('#sectionA header a.pause').trigger('click');
      $('#refreshrate option:last').text('Play');
    }
    if (val === 'Play') {
      $('#sectionA header a.play').trigger('click');
      $('#refreshrate option:last').text('Pause');
    }
    delay = parseInt($('#refreshrate').val());
    $('#settingsPopup a.close').trigger('click');
    return false;
  });

  $('#activeResourcesTable').on('click', '.grouplink', function(e) {
    var $parentSpan, activeResourcesForm, campaign, group, in_group, options, user, _i, _len;

    e.preventDefault();
    $parentSpan = $(this).parent();
    user = $parentSpan.data('user');
    campaign = $parentSpan.data('campaign');
    in_group = $parentSpan.data('in-group');
    in_group = in_group.split(',');
    options = "";
    for (_i = 0, _len = in_group.length; _i < _len; _i++) {
      group = in_group[_i];
      options += '<option>' + group + '</option>';
    }
    activeResourcesForm = '<form id="activeResourcesForm">\
					<div class="leftform">\
						<h2 id="agentHeader">Agent: <span>' + user + '</span></h2>\
						<label for="in-groups">Selected In Groups</label>\
						<select multiple name="in-groups" id="in-groups">' + options + '</select>\
					</div>\
					<div class="rightform">\
						<h2 id="campaignHeader">Campaign: <span>' + campaign + '</span></h2>\
						<label for="changeAddRemove">Change, Add or Remove</label>\
						<select id="changeAddRemove" class="dropdown">\
							<option>Change</option>\
							<option>Add</option>\
							<option>Remove</option>\
						</select>\
						\
						<label for="blendedOutAuto">Blended Outbound Autodial</label>\
						<select id="blendedOutAuto" class="dropdown">\
							<option>On</option>\
							<option>Off</option>\
						</select>\
				\
						<label for="setUserDefault">Set as User Defaults</label>\
						<select id="setUserDefault" class="dropdown">\
							<option>Yes</option>\
							<option>No</option>\
							<option>Remove</option>\
						</select>\
					</div>\
\
					<input type="submit" value="Submit" />\
					<a href="#" class="close" id="closeActiveResourcesForm"></a>\
				</form>';
    $('#activeResourcesTable').append(activeResourcesForm);
    return false;
  });

  $('#activeResourcesTable').on('click', '.listen, .speak, .shout', function(e) {
    var extension, monitor_phone, pass, server_ip, session_id, stage, user;

    e.preventDefault();
    user = $('#settingsPopup').data('user');
    pass = $('#settingsPopup').data('pass');
    extension = $(this).parent().data('station');
    monitor_phone = $('#settingsPopup').data('monitor-phone');
    session_id = $(this).parent().data('session-id');
    server_ip = $('#settingsPopup').data('server-ip');
    if ($(this).attr('class') === 'speak') {
      console.log("extension is " + extension + " monitor_phone is " + monitor_phone);
      return $.post('http://192.168.100.51/coach.php', "phone=" + extension + "&extension=" + monitor_phone).always(function(e) {
        return $('#alert').css('visibility', 'visible');
      });
    } else {
      if ($(this).attr('class') === 'listen') {
        stage = 'MONITOR';
      }
      if ($(this).attr('class') === 'shout') {
        stage = 'BARGE';
      }
      return $.post('non_agent_api.php', "source=realtime&function=blind_monitor&user=" + user + "&pass=" + pass + "&phone_login=" + monitor_phone + "&session_id=" + session_id + '&server_ip=' + server_ip + '&stage=' + stage).always(function(e) {
        var msg;

        msg = e.replace(/\|/gi, ' ');
        $('#alert').css('visibility', 'visible');
        return $('#alertmsg').text(msg);
      });
    }
  });

  $('#alert').on('click', 'input[type="submit"]', function(e) {
    e.preventDefault();
    return $('#alert').css('visibility', 'hidden');
  });

}).call(this);
